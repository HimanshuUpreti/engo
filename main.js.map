{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about-us/about-us.component.css","webpack:///./src/app/about-us/about-us.component.html","webpack:///./src/app/about-us/about-us.component.ts","webpack:///./src/app/api.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login-admin/login-admin.component.css","webpack:///./src/app/login-admin/login-admin.component.html","webpack:///./src/app/login-admin/login-admin.component.ts","webpack:///./src/app/login-ngo/login-ngo.component.css","webpack:///./src/app/login-ngo/login-ngo.component.html","webpack:///./src/app/login-ngo/login-ngo.component.ts","webpack:///./src/app/login-user/login-user.component.css","webpack:///./src/app/login-user/login-user.component.html","webpack:///./src/app/login-user/login-user.component.ts","webpack:///./src/app/ngo-details/ngo-details.component.css","webpack:///./src/app/ngo-details/ngo-details.component.html","webpack:///./src/app/ngo-details/ngo-details.component.ts","webpack:///./src/app/register-ngo/register-ngo.component.css","webpack:///./src/app/register-ngo/register-ngo.component.html","webpack:///./src/app/register-ngo/register-ngo.component.ts","webpack:///./src/app/register-user/register-user.component.css","webpack:///./src/app/register-user/register-user.component.html","webpack:///./src/app/register-user/register-user.component.ts","webpack:///./src/app/view/view.component.css","webpack:///./src/app/view/view.component.html","webpack:///./src/app/view/view.component.ts","webpack:///./src/app/window.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".box1 {\\r\\n    width:80%;\\r\\n    margin:20px auto;\\r\\n } \\r\\n .box1 div{\\r\\n    box-shadow:2px 2px 4px 3px rgba(187, 183, 183, 0.972);\\r\\n    margin:20px;\\r\\n    text-align: center;\\r\\n    border-top-left-radius:30px;\\r\\n    color:rgb(0, 0, 0);  \\r\\n    font-size:20px;    \\r\\n   } \\r\\n .box1 h3{\\r\\n    transition:color linear 2s;\\r\\n} \\r\\n .box1 div:hover h3{\\r\\n   color:blue;\\r\\n}\"","module.exports = \"<div class=\\\"box1\\\">\\n  <div  style=\\\"background-color:rgb(206, 217, 221);\\\">\\n    <h3 style=\\\"background-color:skyblue;border-top-left-radius:30px;\\\">About Us</h3>\\n    The E-NGO is a platform that provides space for interface between VOs/NGOs and users.\\n    It covers many NGOs of Haldwani Uttarakhand.\\n    Any NGOs can register them here and can post events.\\n    It helps users to connect with the different NGOs and see their activities posted in the website.\\n\\n  </div>\\n\\n  <div  style=\\\"background-color:rgb(206, 217, 221);\\\">\\n    <h3 style=\\\"background-color:skyblue;border-top-left-radius:30px;\\\">Design & Developed by</h3>\\n    This module has been developed by a group of C.S.E students of Amrapali Institue of Technology and Sciences.\\n\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.css']\n})\nexport class AboutUsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  confirm = false; isValid;\n  i; dx; usernameArray = [10]; passwordArray = [10];\n\n\n  constructor(private afs: AngularFirestore, private router: Router, private snackBar: MatSnackBar) { }\ngetdata() {\n  return this.afs.collection('ngo').valueChanges();\n}\n\n// add ngo details from register ngo component\naddNGOData(ngoData) {\n  console.log('service');\n  this.afs.collection('ngo').add(ngoData);\n}\n\n// add user from register user component\naddUserData(userData) {\n  console.log('service');\n  this.afs.collection('users').add(userData);\n}\n\n\n\n// login user authentication.\nngoDetails(username, password): boolean {\n  this.afs.collection('users').valueChanges().subscribe( data => {\n    for (this.i = 0 ; this.i <= 30; this.i++ ) {\n      this.dx = data[this.i];\n      this.usernameArray[this.i] = this.dx.username;\n      this.passwordArray[this.i] = this.dx.password;\n\n      if (username === this.usernameArray[this.i] && password === this.passwordArray[this.i]) {\n        this.confirm = true;\n        this.isValid = true;\n        this.snackBar.open('User Successfully LoggedIn' , 'OK' , {\n          duration: 3000});\n          this.router.navigate(['ngoDetails']);\n        break;\n        } else {\n          this.router.navigate(['ngoDetails']);\n        }\n      }\n      });\nreturn  true;\n}\n// ngodetails component get data\nngoData() {\n  return this.afs.collection('ngo').valueChanges();\n}\n\n// view component contact is form\ncontactUs(contact) {\n  this.afs.collection('contact').add(contact);\n}\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginAdminComponent } from './login-admin/login-admin.component';\nimport { LoginNGOComponent } from './login-ngo/login-ngo.component';\nimport { LoginUserComponent } from './login-user/login-user.component';\nimport { ViewComponent } from './view/view.component';\nimport { RegisterUserComponent } from './register-user/register-user.component';\nimport { RegisterNGOComponent } from './register-ngo/register-ngo.component';\nimport { NgoDetailsComponent } from './ngo-details/ngo-details.component';\nimport { AuthGuard } from './auth.guard';\nimport { AboutUsComponent } from './about-us/about-us.component';\n\nconst routes: Routes = [\n{ path: ' ' , pathMatch: 'full'  , component: ViewComponent },\n{ path: 'loginAdmin' , component: LoginAdminComponent },\n{ path: 'loginNGO' , component: LoginNGOComponent },\n{ path: 'loginUser' , component: LoginUserComponent },\n{ path: 'view' , component: ViewComponent },\n{ path: 'registerUser' , component: RegisterUserComponent },\n{ path: 'registerNGO' , component: RegisterNGOComponent },\n{ path: 'ngoDetails' , component: NgoDetailsComponent, canActivate: [AuthGuard] },\n{ path: 'aboutUs' , component: AboutUsComponent},\n{ path: '**' , component: ViewComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<app-home></app-home>\\n\\n\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(private router: Router) {}\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './home/home.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule, MatButtonModule, MatSidenavModule, MatInputModule, MatListModule} from '@angular/material';\nimport { LoginAdminComponent } from './login-admin/login-admin.component';\nimport { LoginUserComponent } from './login-user/login-user.component';\nimport { LoginNGOComponent } from './login-ngo/login-ngo.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { ViewComponent } from './view/view.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RegisterUserComponent } from './register-user/register-user.component';\nimport { RegisterNGOComponent } from './register-ngo/register-ngo.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { environment } from '../environments/environment';\nimport { NgoDetailsComponent } from './ngo-details/ngo-details.component';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { AuthGuard } from './auth.guard';\nimport { ApiService } from './api.service';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { AboutUsComponent } from './about-us/about-us.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginAdminComponent,\n    LoginUserComponent,\n    LoginNGOComponent,\n    ViewComponent,\n    RegisterUserComponent,\n    RegisterNGOComponent,\n    NgoDetailsComponent,\n    AboutUsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatInputModule,\n    MatFormFieldModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    MatSnackBarModule,\n    MatProgressBarModule,\n    MatCardModule,\n    MatGridListModule\n  ],\n  providers: [AuthGuard, ApiService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot , Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ApiService } from './api.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private auth: ApiService, private router: Router, private snackBar: MatSnackBar) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n      if (this.auth.isValid) { this.auth.isValid = false; return true; } else {\n        this.snackBar.open('Please Enter Correct Username and password ' , 'OK' , {\n          duration: 4000});  }\n        this.router.navigate(['loginUser']);\n        return false;\n  }\n\n}\n","module.exports = \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n}\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n}\\n\\n.active{\\n  background-color:rgb(16, 16, 112);\\n  color:white;\\n}\\n\\n.box1{\\n  margin-left:25%;\\n}\\n\\n.box1 a{\\n  margin:10px;\\n  text-decoration: none;\\n}\\n\\n.footer {\\n  background-color: rgba(28, 27, 107, 0.87);\\n  width:100%;\\n  height:10%;\\n  margin:4px 0px;\\n  color:white;\\n  bottom:0px;\\n  opacity: 1;\\n}\\n\\n.line{\\n  margin-top:5px;\\n  border-bottom:5px solid rgb(13, 13, 97);\\n  margin-bottom:10px;\\n}\\n\\n.donate{\\n  background-color:lightgreen;\\n  width:80%;margin:auto;\\n  color:blue;\\n  font-weight:500;\\n}\\n\\n.donate:active .donate {\\n  color:green;\\n}\\n\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav\\n    #drawer\\n    class=\\\"sidenav\\\"\\n    fixedInViewport=\\\"true\\\"\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n    [opened]=\\\"!(isHandset$ | async)\\\">\\n    <mat-toolbar color=\\\"primary\\\">Menu</mat-toolbar>\\n    <mat-nav-list>\\n      <a class=\\\"donate\\\" mat-list-item href=\\\"https://paytm.com/helpinghand/\\\"><mat-icon>monetization_on</mat-icon>DONATE</a><hr>\\n      <a mat-list-item href=\\\"http://www.bhoomi.org.in/\\\"><mat-icon>account_circle</mat-icon>Bhoomi Sanstha</a><hr>\\n      <a mat-list-item href=\\\"http://www.aryasamajmarriage.com/\\\"><mat-icon>account_circle</mat-icon>Arya Samaj Marriage</a><hr>\\n      <a mat-list-item href=\\\"http://suchetna.org/g\\\"><mat-icon>account_circle</mat-icon>Suchetna</a><hr>\\n      <a mat-list-item href=\\\"https://srajan-spastic-society.business.site/\\\"><mat-icon>account_circle</mat-icon>Srajan Spastic Society</a><hr>\\n      <a mat-list-item href=\\\"https://www.searchdonation.com/social-welfare-societya48\\\"><mat-icon>account_circle</mat-icon>Social Welfare Society</a><hr>\\n      <a mat-list-item href=\\\"https://www.searchdonation.com/ek-sankalp-society\\\"><mat-icon>account_circle</mat-icon>Ek Sankalp Society</a><hr>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n\\n  <mat-toolbar style=\\\"position:fixed;\\\" color=\\\"primary\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>E-NGO</span>\\n     \\n  </mat-toolbar>\\n    <!-- main content -->  \\n    <div style=\\\"height:10%;\\\"></div>\\n    <div class=\\\"box1\\\"> \\n        <div class=\\\"button-coloum\\\">\\n          <a mat-stroked-button color=\\\"basic\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"view\\\" href=\\\"#\\\"><mat-icon>home</mat-icon></a>\\n          <a mat-stroked-button color=\\\"basic\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"loginUser\\\"><mat-icon>lock</mat-icon>User</a>\\n          <!-- <a mat-stroked-button color=\\\"basic\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"loginAdmin\\\">Admin</a> -->\\n          <a mat-stroked-button color=\\\"basic\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"loginNGO\\\"><mat-icon>lock</mat-icon>NGO</a>\\n          <a mat-stroked-button color=\\\"basic\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"aboutUs\\\"><mat-icon>account_box</mat-icon>AboutUs</a>\\n        </div>\\n        </div>\\n        <div class=\\\"line\\\"></div>\\n    <router-outlet></router-outlet>\\n    <div class=\\\"footer\\\"> ALL RIGHTS RESERVED E-NGO</div>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\\n\\n\"","import { Component , OnInit} from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../api.service';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\nisHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver, private http: HttpClient, private router: Router, private api: ApiService) {}\nngOnInit() {\n}\n\n}\n\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  .example-container > * {\\r\\n    width: 50%;\\r\\n    margin:auto;\\r\\n  }\\r\\n  \\r\\n  h1{\\r\\n     color:rgb(10, 10, 97);\\r\\n  }\"","module.exports = \"\\n<div class=\\\"example-container\\\">\\n<h1>ADMIN LOGIN</h1>\\n\\n  <mat-form-field>\\n    <input MatFormFieldControl matInput placeholder=\\\"Username\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input type=\\\"text\\\" MatFormFieldControl matInput placeholder=\\\"Password\\\" />\\n  </mat-form-field>\\n\\n  <button mat-stroked-button color=\\\"primary\\\">Login</button>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-admin',\n  templateUrl: './login-admin.component.html',\n  styleUrls: ['./login-admin.component.css']\n})\nexport class LoginAdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  .example-container > * {\\r\\n    width: 80%;\\r\\n    margin:auto;\\r\\n    margin-bottom:20px;\\r\\n\\r\\n  }\\r\\n  \\r\\n  .icon {\\r\\n    padding-top:5px;\\r\\n    font-size:30px;\\r\\n    font-weight: 500;\\r\\n  }\\r\\n  \\r\\n  .ngo {\\r\\n    text-align:center;\\r\\n    box-shadow: 2px 2px 4px 4px rgb(157, 164, 167);\\r\\n    width:60%;\\r\\n    margin:auto;\\r\\n    margin-bottom:20px;\\r\\n  }\\r\\n\"","module.exports = \"<div class=\\\"ngo\\\">\\n<div class=\\\"example-container\\\">\\n\\n  <div class=\\\"icon\\\"><mat-icon>lock</mat-icon>\\n    NGO Login</div> \\n    \\n    <mat-form-field>\\n      <input autofocus MatFormFieldControl matInput placeholder=\\\"Username\\\">\\n    </mat-form-field>\\n  \\n    <mat-form-field>\\n      <input type=\\\"password\\\" MatFormFieldControl matInput placeholder=\\\"NGO ID\\\" />\\n    </mat-form-field>\\n  \\n    <button mat-stroked-button color=\\\"primary\\\">Login</button>\\n    <span>New NGO? <a routerLink=\\\"/registerNGO\\\">Register here</a></span>\\n  </div>\\n</div>\\n\\n  \\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-ngo',\n  templateUrl: './login-ngo.component.html',\n  styleUrls: ['./login-ngo.component.css']\n})\nexport class LoginNGOComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  .example-container > * {\\r\\n    width: 80%;\\r\\n    margin:auto;\\r\\n    margin-bottom:20px;\\r\\n  }\\r\\n  \\r\\n  .icon {\\r\\n    padding-top:5px;\\r\\n    font-size:30px;\\r\\n    font-weight: 500;\\r\\n  }\\r\\n  \\r\\n  .user {\\r\\n    text-align:center;\\r\\n    box-shadow: 2px 2px 4px 4px rgb(157, 164, 167);\\r\\n    width:80%;\\r\\n    margin:auto;\\r\\n    margin-bottom:20px;\\r\\n  }\\r\\n  \\r\\n  .validatingUsername {\\r\\n    width:50%;\\r\\n    height:8%;\\r\\n    color:red;\\r\\n    /* border:2px solid red; */\\r\\n  }\\r\\n\\r\\n  \\r\\n\\r\\n  \"","module.exports = \"<div class=\\\"user\\\"> \\n\\n<form #userForm=\\\"ngForm\\\" ng-submit=\\\"yes\\\"> \\n<div class=\\\"example-container\\\">\\n  <div class=\\\"icon\\\"><mat-icon>lock</mat-icon>\\n  User Login</div>\\n    <mat-form-field>\\n      <input autofocus #user=\\\"ngModel\\\" MatFormFieldControl matInput placeholder=\\\"Username\\\" name=\\\"username\\\" required [(ngModel)]=\\\"username\\\">\\n    </mat-form-field>\\n  <div *ngIf=\\\"user.invalid && user.touched\\\" class=\\\"validatingUsername\\\">Invalid Username</div>\\n    \\n  <mat-form-field>\\n      <input #pass=\\\"ngModel\\\" type=\\\"password\\\" MatFormFieldControl matInput placeholder=\\\"Password\\\" name=\\\"password\\\" maxlength=\\\"15\\\" required [(ngModel)]=\\\"password\\\"/>\\n    </mat-form-field>\\n    <div *ngIf=\\\"pass.invalid && pass.touched\\\" class=\\\"validatingUsername\\\">Invalid Username</div>\\n   <!-- progress bar -->\\n    <mat-progress-bar *ngIf=\\\"progressbar\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n\\n    <button mat-stroked-button [disabled]=\\\"!userForm.form.valid\\\" color=\\\"primary\\\" (click)=\\\"ngoDetails()\\\">Login</button>\\n    <span>New User? <a routerLink=\\\"/registerUser\\\">Register here</a></span>\\n  </div>\\n  </form>\\n  </div>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login-user',\n  templateUrl: './login-user.component.html',\n  styleUrls: ['./login-user.component.css']\n})\nexport class LoginUserComponent implements OnInit {\n\n  constructor(private serv: ApiService, private router: Router) { }\nyes = true;\nusername;\npassword;\nprogressbar = false;\n  ngOnInit() {\n  }\n\n  ngoDetails() {\n     this.progressbar = true;\n     this.progressbar  = this.serv.ngoDetails(this.username, this.password);\n  }\n\n}\n","module.exports = \".main {\\r\\n    background-color:wheat;\\r\\n}\\r\\n.header {\\r\\n    height:60px;\\r\\n    background-color:rgb(42, 55, 75);\\r\\n    color:white;\\r\\n    padding-top:1%;\\r\\n}\\r\\nmat-grid-tile {\\r\\n    background-color:rgb(29, 197, 253);\\r\\n    width:70%;\\r\\n    border:3px solid rgb(120, 223, 120);\\r\\n    margin-bottom:10px;\\r\\n}\\r\\n.example-card {\\r\\n    width: 600px;\\r\\n    margin:auto;\\r\\n    border-radius:10px;\\r\\n  }\\r\\n.example-header-image {\\r\\n    background-image: url('ngodp.jpg');\\r\\n    background-size: cover;\\r\\n  }\\r\\n\"","module.exports = \"<div class=\\\"main\\\">\\n<div class=\\\"header\\\">\\n <div style=\\\"float:left;margin:auto;width:75%;\\\"><h3>NGO Details</h3></div> \\n <div style=\\\"float:right;\\\">\\n   <a style=\\\"text-decoration:none;font-size:18px;\\\" mat-raised-button color=\\\"primary\\\" routerLink=\\\"../loginUser\\\">Logout</a>\\n  </div>\\n</div>\\n\\n  <br />\\n  \\n<div> \\n        <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"600px\\\">\\n            <mat-grid-tile\\n                *ngFor=\\\"let data of ngoDetails\\\">\\n                <mat-card class=\\\"example-card\\\">\\n                  <!-- matcard -->\\n                    <mat-card-header>\\n                      <div mat-card-avatar class=\\\"example-header-image\\\">\\n                      </div>\\n                      <mat-card-title style=\\\"color:rgb(0, 49, 128);text-transform:uppercase;\\\"><b>{{data.ngoName}}</b></mat-card-title>\\n                      <mat-card-subtitle>{{data.location}}</mat-card-subtitle>\\n                    </mat-card-header>\\n                    <img mat-card-image height=\\\"300px\\\" src={{data.ngoImageUrl}} alt=\\\"Image of NGO\\\">\\n                    <mat-card-content>\\n                      <p>\\n                          {{data.description}}\\n                      </p>\\n                    </mat-card-content>\\n                    <!-- <mat-card-actions>\\n                      <button mat-button>LIKE</button>\\n                      <button mat-button>SHARE</button>\\n                    </mat-card-actions> -->\\n                    OWNER - {{data.username}}<br />\\n                    EMAIL - {{data.email}}<br />\\n                    CONTACT NUMBER - {{data.num}}<br />\\n                  </mat-card>\\n                  <!-- mat card end here  -->\\n            </mat-grid-tile>\\n          </mat-grid-list>\\n      <!-- <div class=\\\"grid-container\\\">\\n          <div class=\\\"grid-item\\\">Owner</div>\\n          <div class=\\\"grid-item\\\">{{data.username}}</div>  \\n          <div class=\\\"grid-item\\\">Email</div>\\n          <div class=\\\"grid-item\\\">{{data.email}}</div>  \\n          <div class=\\\"grid-item\\\">Contact Number</div>  \\n          <div class=\\\"grid-item\\\">{{data.num}}</div>  \\n        </div> -->\\n\\n</div>      \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-ngo-details',\n  templateUrl: './ngo-details.component.html',\n  styleUrls: ['./ngo-details.component.css']\n})\nexport class NgoDetailsComponent implements OnInit {\n\n  constructor(private serv: ApiService) { }\n\n  ngoDetails;\n  ngOnInit() {\n    this.showNGOS();\n  }\n\n  showNGOS() {\n    this.serv.ngoData().subscribe(\n      data => { this.ngoDetails = data; });\n  }\n\n}\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  .example-container > * {\\r\\n    width: 80%;\\r\\n    margin:auto;\\r\\n    margin-bottom:20px;\\r\\n\\r\\n  }\\r\\n  \\r\\n  .icon {\\r\\n    padding-top:5px;\\r\\n    font-size:30px;\\r\\n    font-weight: 500;\\r\\n  }\\r\\n  \\r\\n  .user {\\r\\n    text-align: center;\\r\\n    box-shadow: 2px 2px 4px 4px rgb(157, 164, 167);\\r\\n    width: 60%;\\r\\n    margin: auto;\\r\\n    margin-bottom: 20px;\\r\\n  }\\r\\n  \\r\\n  .validatingUsername {\\r\\n    width:50%;\\r\\n    height:8%;\\r\\n    /* color:black; */\\r\\n    /* border:2px solid red; */\\r\\n    color:red;\\r\\n  }\\r\\n\"","module.exports = \"<div class=\\\"user\\\"> \\n  <form #userForm=\\\"ngForm\\\" ng-submit=\\\"yes\\\">  \\n    \\n    <!-- {{ userForm.value | json }} -->\\n  <div class=\\\"example-container\\\">\\n      <div class=\\\"icon\\\"><mat-icon>account_box</mat-icon>\\n      Register New NGO</div>\\n      <!-- username -->\\n        <mat-form-field>\\n          <input autofocus ngModel required #username=\\\"ngModel\\\" name=\\\"username\\\" MatFormFieldControl matInput placeholder=\\\"Username\\\" [(ngModel)]=\\\"ngoData.username\\\" />\\n        </mat-form-field>\\n        <div *ngIf=\\\"username.invalid && username.touched\\\" class=\\\"validatingUsername\\\">Invalid Username</div>\\n       <!-- password -->\\n        <mat-form-field>\\n          <input required #password=\\\"ngModel\\\" name=\\\"password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" MatFormFieldControl matInput placeholder=\\\"Unique ID\\\"  [(ngModel)]=\\\"ngoData.uniqueID\\\"/>\\n          <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n        </mat-form-field>\\n        <div *ngIf=\\\"password.invalid && password.touched\\\" class=\\\"validatingUsername\\\">Invalid ID</div>\\n       <!-- ngo name -->\\n        <mat-form-field>\\n          <input ngModel required #ngoname=\\\"ngModel\\\" name=\\\"ngoname\\\" type=\\\"text\\\" MatFormFieldControl matInput placeholder=\\\"NGO Name\\\"  [(ngModel)]=\\\"ngoData.ngoName\\\"/>\\n        </mat-form-field>\\n        <div *ngIf=\\\"ngoname.invalid && ngoname.touched\\\" class=\\\"validatingUsername\\\">Invalid NGO name</div>\\n        <!-- description -->\\n        <mat-form-field>\\n            <textarea maxlength=\\\"300\\\" ngModel required #description=\\\"ngModel\\\" name=\\\"description\\\" MatFormFieldControl matInput placeholder=\\\"NGO Description\\\"  [(ngModel)]=\\\"ngoData.description\\\"></textarea>\\n          </mat-form-field>\\n          <div *ngIf=\\\"description.invalid && description.touched\\\" class=\\\"validatingUsername\\\">Invalid Description</div>\\n         <!-- ngo image url -->\\n         <mat-form-field>\\n            <input ngModel required #ngoImageUrl=\\\"ngModel\\\" name=\\\"ngoImageUrl\\\" type=\\\"url\\\" pattern=\\\"https://.*\\\" MatFormFieldControl matInput placeholder=\\\"NGO Image Url\\\"  [(ngModel)]=\\\"ngoData.ngoImageUrl\\\"/>\\n          </mat-form-field>\\n          <div *ngIf=\\\"ngoImageUrl.invalid && ngoImageUrl.touched\\\" class=\\\"validatingUsername\\\">Invalid Image Url</div>\\n          <!-- email -->\\n        <mat-form-field>\\n            <input ngModel required #email=\\\"ngModel\\\" name=\\\"email\\\" type=\\\"email\\\" pattern=\\\"[a-zA-Z0-9.]{2,20}(@gmail.com)\\\" MatFormFieldControl matInput placeholder=\\\"Email\\\"  [(ngModel)]=\\\"ngoData.email\\\"/>\\n          </mat-form-field>\\n          <div *ngIf=\\\"email.invalid && email.touched\\\" class=\\\"validatingUsername\\\">Invalid Email</div>\\n       <!-- location -->\\n          <mat-form-field>\\n              <input ngModel required #location=\\\"ngModel\\\" name=\\\"location\\\" type=\\\"text\\\" MatFormFieldControl matInput placeholder=\\\"location\\\"  [(ngModel)]=\\\"ngoData.location\\\"/>\\n            </mat-form-field>\\n            <div *ngIf=\\\"location.invalid && location.touched\\\" class=\\\"validatingUsername\\\">Invalid Location</div>\\n        \\n        <!-- Phone Number authenitiction with OTP -->\\n        <mat-form-field>\\n            <input [(ngModel)]=\\\"phoneNumber\\\" required #mobile=\\\"ngModel\\\" name=\\\"mobile\\\" type=\\\"number\\\" pattern=\\\"[6-9][0-9]{9}\\\" MatFormFieldControl matInput placeholder=\\\"Mobile No.\\\"  [(ngModel)]=\\\"ngoData.num\\\" />        \\n        </mat-form-field>\\n        <div *ngIf=\\\"mobile.invalid && mobile.touched\\\" class=\\\"validatingUsername\\\">Invalid Mobile Number</div>\\n            <!-- recaptcha -->\\n            <div id=\\\"recaptcha-container\\\"></div> \\n            <button (click)=\\\"sendLoginCode()\\\">Send OTP</button>\\n            <!-- progress bar -->\\n            <mat-progress-bar *ngIf=\\\"progressbar\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n            <div *ngIf=\\\"windowRef.confirmationResult\\\">\\n            <label for=\\\"code\\\">Enter OTP </label>\\n            <input type=\\\"text\\\" name=\\\"code\\\" [(ngModel)]=\\\"vc\\\">\\n            <button (click)=\\\"verifyLoginCode()\\\">verify</button>\\n            <div *ngIf=\\\"error\\\" class=\\\"validatingUsername\\\">Invalid OTP</div>\\n            </div>  \\n\\n          <div *ngIf=\\\"open\\\"><button [disabled]=\\\"!userForm.form.valid\\\" type=\\\"submit\\\" mat-stroked-button color=\\\"primary\\\" (click)=\\\"onSubmit()\\\">Signup</button></div>\\n          <button mat-stroked-button color=\\\"primary\\\" type=\\\"reset\\\">Enter New Data</button> \\n        </div>\\n    </form>\\n  </div>\\n\\n  \"","import { Component, OnInit } from '@angular/core';\nimport * as firebase from 'firebase';\nimport { WindowService } from '../window.service';\nimport { ApiService } from '../api.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-register-ngo',\n  templateUrl: './register-ngo.component.html',\n  styleUrls: ['./register-ngo.component.css']\n})\nexport class RegisterNGOComponent implements OnInit {\n  ngoData = {\n    username: '',\n    uniqueID: '',\n    ngoName: '',\n    description: '',\n    ngoImageUrl: '',\n    email: '',\n    location: '',\n    num: ''\n};\n\nwindowRef: any;\n  num;\n  vc;\n  user;\n  phoneNumber: string;\n  open = false;\n  progressbar = false;\n  error = false;\n  hide = true;\n  constructor(private windserv: WindowService,\n              private serv: ApiService,\n              private snackBar: MatSnackBar) { }\n\n  ngOnInit() {\n    this.windowRef = this.windserv.windowRef;\n    this.windowRef.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container');\n    this.windowRef.recaptchaVerifier.render();\n  }\n  onSubmit() {\n    // for register button\n    this.open = false;\n    this.serv.addNGOData(this.ngoData);\n    this.snackBar.open('NGO Successfully Registered' , 'OK' , {\n    duration: 5000});\n   this.windowRef.confirmationResult = false ;\n  }\n  sendLoginCode() {\n    this.progressbar = true;\n    this.open = false;\n    const appverifier = this.windowRef.recaptchaVerifier;\n    this.num = '+91' +  this.phoneNumber;\n    firebase.auth().signInWithPhoneNumber(this.num, appverifier )\n    .then(result => { this.windowRef.confirmationResult = result; this.progressbar = false; });\n    }\n\n    verifyLoginCode() {\n      this.progressbar = true;\n      this.windowRef.confirmationResult\n      .confirm(this.vc).\n      then(result => { this.open = true;\n           this.progressbar = false;\n           this.windowRef.confirmationResult = false ;\n           this.error = false; })\n           .catch( error => { this.error = error; } );\n    }\n\n}\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  .example-container > * {\\r\\n    width: 80%;\\r\\n    margin:auto;\\r\\n    margin-bottom:20px;\\r\\n\\r\\n  }\\r\\n  \\r\\n  .icon {\\r\\n    padding-top:5px;\\r\\n    font-size:30px;\\r\\n    font-weight: 500;\\r\\n  }\\r\\n  \\r\\n  .user {\\r\\n    text-align: center;\\r\\n    box-shadow: 2px 2px 4px 4px rgb(157, 164, 167);\\r\\n    width: 80%;\\r\\n    margin: auto;\\r\\n    margin-bottom: 20px;\\r\\n  }\\r\\n  \\r\\n  .validatingUsername {\\r\\n    width:50%;\\r\\n    height:8%;\\r\\n    color:red;\\r\\n    /* border:2px solid red; */\\r\\n  }\\r\\n  \\r\\n\"","module.exports = \"<div class=\\\"user\\\"> \\n  <form #userForm=\\\"ngForm\\\" ng-submit=\\\"yes\\\">  \\n    \\n    <!-- {{ userForm.value | json }} -->\\n  <div class=\\\"example-container\\\">\\n      <div class=\\\"icon\\\"><mat-icon>lock</mat-icon>\\n      Register New User</div>\\n      \\n        <mat-form-field>\\n          <input autofocus [(ngModel)]=\\\"userData.username\\\" required #username=\\\"ngModel\\\" name=\\\"username\\\" MatFormFieldControl matInput placeholder=\\\"Username\\\">\\n        </mat-form-field>\\n        <div *ngIf=\\\"username.invalid && username.touched\\\" class=\\\"validatingUsername\\\">Invalid Username</div>\\n      \\n        <mat-form-field>\\n          <input [(ngModel)]=\\\"userData.password\\\" required #password=\\\"ngModel\\\" name=\\\"password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" MatFormFieldControl matInput placeholder=\\\"Password\\\" />\\n          <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n        </mat-form-field>\\n        <div *ngIf=\\\"password.invalid && password.touched\\\" class=\\\"validatingUsername\\\">Invalid Password</div>\\n       \\n        <!-- Phone Number authenitiction with OTP -->\\n        <mat-form-field>\\n            <input [(ngModel)]=\\\"phoneNumber\\\" required #mobile=\\\"ngModel\\\" name=\\\"mobile\\\" type=\\\"number\\\" pattern=\\\"[6-9^e][0-9^e]{9}\\\" MatFormFieldControl matInput placeholder=\\\"Mobile No.\\\" />        \\n        </mat-form-field>\\n        <div *ngIf=\\\"mobile.invalid && mobile.touched\\\" class=\\\"validatingUsername\\\">Invalid Mobile Number</div>\\n            <!-- recaptcha -->\\n            <div id=\\\"recaptcha-container\\\"></div> \\n            <button (click)=\\\"sendLoginCode()\\\">Send OTP</button>\\n            <!-- progress bar -->\\n            <mat-progress-bar *ngIf=\\\"progressbar\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n            <div *ngIf=\\\"windowRef.confirmationResult\\\">\\n            <label for=\\\"code\\\">Enter OTP </label>\\n            <input type=\\\"text\\\" name=\\\"code\\\" [(ngModel)]=\\\"vc\\\">\\n            <button (click)=\\\"verifyLoginCode()\\\">verify</button>\\n            <div *ngIf=\\\"error\\\" class=\\\"validatingUsername\\\">Invalid OTP</div>\\n            </div>  \\n        <div *ngIf=\\\"open\\\"><button [disabled]=\\\"!userForm.form.valid\\\" mat-stroked-button color=\\\"primary\\\" (click)=\\\"onSubmit()\\\">Register</button></div>\\n        <button mat-stroked-button color=\\\"primary\\\" type=\\\"reset\\\">Enter New Data</button>\\n      </div>\\n    </form>\\n \\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiService } from '../api.service';\nimport * as firebase from 'firebase';\nimport { WindowService } from '../window.service';\nimport {MatSnackBar} from '@angular/material';\n\n\n@Component({\n  selector: 'app-register-user',\n  templateUrl: './register-user.component.html',\n  styleUrls: ['./register-user.component.css']\n})\nexport class RegisterUserComponent implements OnInit {\n\n  constructor(private serv: ApiService, private windserv: WindowService, public snackBar: MatSnackBar) { }\nuserData = {\n  username: '',\n  password: '',\n  num: ''\n};\nwindowRef: any;\nvc;\nuser;\nphoneNumber: string;\nopen = false;\nprogressbar = false;\nerror = false;\nhide = true;\n\nngOnInit() {\n  this.windowRef = this.windserv.windowRef;\n  this.windowRef.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container');\n  this.windowRef.recaptchaVerifier.render();\n  }\n\nonSubmit() {\n  // for register button\n  this.open = false;\n  this.serv.addUserData(this.userData);\n  this.snackBar.open('User Successfully Registered' , 'OK' , {\n  duration: 5000});\n this.windowRef.confirmationResult = false ;\n}\n  sendLoginCode() {\n    this.progressbar = true;\n    const appverifier = this.windowRef.recaptchaVerifier;\n    this.userData.num = '+91' +  this.phoneNumber;\n    firebase.auth().signInWithPhoneNumber(this.userData.num, appverifier )\n    .then(result => { this.windowRef.confirmationResult = result; this.progressbar = false;\n    });\n    }\n\n    verifyLoginCode() {\n      this.progressbar = true;\n      this.windowRef.confirmationResult\n      .confirm(this.vc).\n      then(result => {\n         this.open = true;\n         this.progressbar = false;\n         this.windowRef.confirmationResult = false;\n        }).catch( error => { this.error = error; });\n    }\n}\n","module.exports = \".main {\\r\\n    background-color: wheat;\\r\\n}\\r\\n/* .slideMain {\\r\\n    width:100%;\\r\\n    height:300px;\\r\\n} */\\r\\n.slider { \\r\\n   width:80%;\\r\\n   height:410px;\\r\\n   margin:auto;\\r\\n   -webkit-animation: slide linear 20s infinite;\\r\\n           animation: slide linear 20s infinite;\\r\\n}\\r\\n@-webkit-keyframes slide{\\r\\n    0%{\\r\\n        background:url('ngo3.jpg'); \\r\\n    }\\r\\n    25%{\\r\\n        background:url('ngo4.jpg'); \\r\\n    }\\r\\n    50%{\\r\\n        background:url('ngo5.png'); \\r\\n    }\\r\\n    75%{\\r\\n        background:url('ngo6.jpg'); \\r\\n    }\\r\\n    100%{\\r\\n        background:url('ngo3.jpg'); \\r\\n    }    \\r\\n}\\r\\n@keyframes slide{\\r\\n    0%{\\r\\n        background:url('ngo3.jpg'); \\r\\n    }\\r\\n    25%{\\r\\n        background:url('ngo4.jpg'); \\r\\n    }\\r\\n    50%{\\r\\n        background:url('ngo5.png'); \\r\\n    }\\r\\n    75%{\\r\\n        background:url('ngo6.jpg'); \\r\\n    }\\r\\n    100%{\\r\\n        background:url('ngo3.jpg'); \\r\\n    }    \\r\\n}\\r\\n.box1 div{\\r\\n box-shadow:2px 2px 4px 3px rgba(187, 183, 183, 0.972);\\r\\n margin:20px;\\r\\n text-align: center;\\r\\n border-top-left-radius:30px;\\r\\n color:rgb(0, 0, 0);  \\r\\n font-size:20px;    \\r\\n}\\r\\n.box1 h3{\\r\\n    transition:color linear 2s;\\r\\n}\\r\\n.box1 div:hover h3{\\r\\n   color:blue;\\r\\n}\\r\\n.box1 {\\r\\n   width:80%;\\r\\n   margin:20px auto;\\r\\n}\\r\\n.contact-form {\\r\\n    text-align: center;\\r\\n    box-shadow: 2px 2px 4px 4px rgb(157, 164, 167);\\r\\n    width: 80%; \\r\\n    margin: auto; \\r\\n    margin-bottom: 20px;\\r\\n    margin-top: 40px;\\r\\n    background-color:white;\\r\\n  }\\r\\n.icon { \\r\\n    padding-top:5px;\\r\\n    font-size:30px;\\r\\n    font-weight: 500;\\r\\n    color:blue;\\r\\n  }\\r\\n.example-container { \\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n.example-container > * {\\r\\n    width: 80%;\\r\\n    margin:auto;\\r\\n    margin-bottom:20px;\\r\\n  }\\r\\n\"","module.exports = \" <div class=\\\"main\\\">\\n<!--<img [src]=\\\"image\\\" width=\\\"100%\\\" height=\\\"300px\\\" alt=\\\"\\\"> -->\\n<div class=\\\"slideMain\\\">\\n<div class=\\\"slider\\\"></div>\\n</div>\\n\\n<!-- ngo -->\\n<div class=\\\"box1\\\">\\n<div  style=\\\"background-color:rgb(206, 217, 221);\\\">\\n  <h3 style=\\\"background-color:skyblue;border-top-left-radius:30px;\\\">NGO</h3>\\n    Non-governmental organizations, nongovernmental organizations, or nongovernment organizations, commonly referred to as NGOs , are usually non-profit and sometimes international organizations independent of governments and international governmental organizations (though often funded by governments) that are active in humanitarian, educational, health care, public policy, social, human rights, environmental, and other areas to affect changes according to their objectives. They are thus a subgroup of all organizations founded by citizens, which include clubs and other associations that provide services, benefits, and premises only to members\\n</div>\\n</div>\\n<br />\\n<div class=\\\"box1\\\">\\n<div style=\\\"background-color:rgb(206, 217, 221);\\\">\\n  <h3 style=\\\"background-color:skyblue;border-top-left-radius:30px;\\\">NGO Network</h3>\\n  NGOs work for a range of issues in India and in different states and localities. NGO network help many different NGOs working on the same issue in different states of India to come together and build a common platform to raise their issues. One of the very important strength of NGO network is number. They have a huge number of people to endorse their demands and therefore they are positioned in a better place to lobby, work for advocacy and bring important changes. The NGO network also helps them to access, share and contribute resources, issues, information and to associate with other like-minded NGOs which are working on similar issues\\n</div>\\n</div>\\n\\n\\n<!-- Contact us form -->\\n<div class=\\\"contact-form\\\">\\n    <div class=\\\"icon\\\"><mat-icon>question_answer</mat-icon>\\n      Contact - Us</div>\\n    <form #userForm=\\\"ngForm\\\" ng-submit=\\\"yes\\\">\\n        <div class=\\\"example-container\\\">\\n      <!-- username -->\\n        <mat-form-field>\\n            <input #user=\\\"ngModel\\\" MatFormFieldControl matInput placeholder=\\\"Username\\\" name=\\\"username\\\" required [(ngModel)]=\\\"contact.username\\\">\\n        </mat-form-field>\\n        <mat-error *ngIf=\\\"user.invalid && user.touched\\\">Invalid Username</mat-error>\\n      <!-- email -->\\n          <mat-form-field>\\n              <input #email=\\\"ngModel\\\" MatFormFieldControl matInput placeholder=\\\"Email\\\" pattern=\\\"[a-zA-Z0-9.]{2,20}(@gmail.com)\\\" name=\\\"email\\\" required [(ngModel)]=\\\"contact.email\\\">\\n            </mat-form-field>\\n          <mat-error *ngIf=\\\"email.invalid && email.touched\\\">Invalid Email</mat-error>\\n     <!-- description -->\\n          <mat-form-field>\\n             <textarea maxlength=\\\"500\\\" ngModel required #description=\\\"ngModel\\\" name=\\\"description\\\" MatFormFieldControl matInput placeholder=\\\"Message\\\"  [(ngModel)]=\\\"contact.description\\\"></textarea>\\n           </mat-form-field>\\n          <mat-error *ngIf=\\\"description.invalid && description.touched\\\">Enter message</mat-error>\\n          <button [disabled]=\\\"!userForm.form.valid\\\" type=\\\"submit\\\" mat-stroked-button color=\\\"primary\\\" (click)=\\\"contactForm()\\\">Signup</button>\\n        </div>\\n        </form>\\n</div>\\n<!-- contact us form end -->\\n<br>\\n</div>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport * as firebase from 'firebase';\nimport { WindowService } from '../window.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.css']\n})\nexport class ViewComponent implements OnInit {\n\n  constructor(private serv: ApiService, private windserv: WindowService, private snackBar: MatSnackBar) { }\ncontact = {\n  username: '',\n  email: '',\n  description: ''\n};\n\nngOnInit() { }\n\ncontactForm () {\n  this.serv.contactUs(this.contact);\n  this.snackBar.open('Your response is successfully submitted' , 'OK' , {\n    duration: 5000});\n}\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WindowService {\n\n  constructor() { }\n  get windowRef() {\n    return window;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyBNohwm989Tvkv9EWzDE1hMw6Gdzb33MIg',\n    authDomain: 'ngpro-cf69f.firebaseapp.com',\n    databaseURL: 'https://ngpro-cf69f.firebaseio.com',\n    projectId: 'ngpro-cf69f',\n    messagingSenderId: '142775552002'\n  }\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}